1.模块：一个.py文件就称之为一个模块（Module）
	好处：大大提高了代码的可维护性
	为了避免模块名冲突，Python又引入了按目录来组织模块的方法，称为包（Package）
	mycompany
 	├─ __init__.py
	├─ abc.py
	└─ xyz.py
	请注意，每一个包目录下面都会有一个__init__.py的文件，这个文件是必须存在的，否则，Python就把这个目录
	当成普通目录，而不是一个包。
	__init__.py可以是空文件，也可以有Python代码，因为__init__.py本身就是一个模块，而它的模块名就是mycompany。
	
	自己创建模块时要注意命名，不能和Python自带的模块名称冲突。例如，系统自带了sys模块，
	自己的模块就不可命名为sys.py，否则将无法导入系统自带的sys模块。

	创建自己的模块时，要注意：
	模块名要遵循Python变量命名规范，不要使用中文、特殊字符；
	模块名不要和系统模块名冲突，最好先查看系统是否已存在该模块，检查方法是在Python交互环境执行import abc，若成功则说明系统存在此模块。
2.使用模块：
	导入模块： import   模块名
	作用域：正常的函数和变量名是公开的（public）；类似__xxx__这样的变量是特殊变量，可以被直接引用，但是有特殊用途
3.安装第三方模块：安装第三方模块，是通过包管理工具pip完成的
	pip install  模块名
	











